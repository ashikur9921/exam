<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Task Manager</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- Bootstrap CSS CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .completed {
      text-decoration: line-through;
      color: gray;
    }
  </style>
</head>
<body class="bg-light">

  <div class="container py-5">
    <h2 class="text-center mb-4">üìù Task Manager</h2>

    <!-- Alert -->
    <div id="alertBox"></div>

    <!-- Task Input -->
    <div class="input-group mb-3">
      <input type="text" id="taskInput" class="form-control" placeholder="Enter a new task">
      <button id="addTaskBtn" class="btn btn-primary">Add Task</button>
    </div>

    <!-- Task List -->
    <ul id="taskList" class="list-group mb-3"></ul>

    <!-- Task Count -->
    <div class="text-end text-muted">
      Total Tasks: <span id="taskCount">0</span>
    </div>
  </div>

  <!-- Bootstrap + JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const taskInput = document.getElementById('taskInput');
    const addTaskBtn = document.getElementById('addTaskBtn');
    const taskList = document.getElementById('taskList');
    const taskCount = document.getElementById('taskCount');
    const alertBox = document.getElementById('alertBox');

    // Load from localStorage
    let tasks = JSON.parse(localStorage.getItem('tasks')) || [];

    // Display alert
    function showAlert(message, type = 'success') {
      alertBox.innerHTML = `
        <div class="alert alert-${type} alert-dismissible fade show" role="alert">
          ${message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>`;
      setTimeout(() => alertBox.innerHTML = '', 3000);
    }

    // Save to localStorage
    function saveTasks() {
      localStorage.setItem('tasks', JSON.stringify(tasks));
    }

    // Update Task Count
    function updateCount() {
      taskCount.textContent = tasks.length;
    }

    // Render Tasks
    function renderTasks() {
      taskList.innerHTML = '';
      tasks.forEach((task, index) => {
        const li = document.createElement('li');
        li.className = 'list-group-item d-flex justify-content-between align-items-center';
        li.innerHTML = `
          <span class="${task.completed ? 'completed' : ''}" style="cursor: pointer;">${task.text}</span>
          <div>
            <button class="btn btn-sm btn-success me-2 complete-btn">‚úî</button>
            <button class="btn btn-sm btn-danger delete-btn">üóë</button>
          </div>
        `;
        // Toggle complete
        li.querySelector('.complete-btn').addEventListener('click', () => {
          tasks[index].completed = !tasks[index].completed;
          saveTasks();
          renderTasks();
        });
        // Delete
        li.querySelector('.delete-btn').addEventListener('click', () => {
          tasks.splice(index, 1);
          saveTasks();
          renderTasks();
          showAlert('Task deleted.', 'danger');
        });
        taskList.appendChild(li);
      });
      updateCount();
    }

    // Add Task
    addTaskBtn.addEventListener('click', () => {
      const text = taskInput.value.trim();
      if (!text) {
        showAlert('Please enter a task.', 'warning');
        return;
      }
      tasks.push({ text, completed: false });
      taskInput.value = '';
      saveTasks();
      renderTasks();
      showAlert('Task added!');
    });

    // Enter key adds task
    taskInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') addTaskBtn.click();
    });

    // Initial render
    renderTasks();
  </script>
</body>
</html>
